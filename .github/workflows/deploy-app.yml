name: Deploy Application

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'terraform/**'
      - '**.md'
  workflow_dispatch:

jobs:
  deploy:
    name: 'Deploy Remix Application'
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build application
        run: npm run build

      - name: Set up SSH
        uses: webfactory/ssh-agent@v0.7.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_PRIVATE_KEY }}

      - name: Deploy to EC2
        env:
          EC2_HOST: "18.208.152.222"
          EC2_USERNAME: "ec2-user"
          DATABASE_URL: ${{ secrets.DATABASE_URL }}
          SHOPIFY_API_KEY: ${{ secrets.SHOPIFY_API_KEY }}
          SHOPIFY_API_SECRET: ${{ secrets.SHOPIFY_API_SECRET }}
          SHOPIFY_APP_URL: ${{ secrets.SHOPIFY_APP_URL }}
          SHOPIFY_APP_SCOPES: write_products,write_customers,write_orders
          USPS_CONSUMER_KEY: mHfs1vG04FndnBjVepBvC2FbudaOt5wYChkIi0GZJy4IK90W
          USPS_CONSUMER_SECRET: ${{ secrets.USPS_CONSUMER_SECRET }}
        run: |
          # Create a deployment directory with timestamp
          DEPLOY_DIR="address-validation-$(date +%Y%m%d%H%M%S)"

          # Create .env file with secrets
          cat > .env <<EOL
          DATABASE_PROVIDER=postgresql
          DATABASE_URL=${DATABASE_URL}
          SHOPIFY_API_KEY=${SHOPIFY_API_KEY}
          SHOPIFY_API_SECRET=${SHOPIFY_API_SECRET}
          SHOPIFY_APP_URL=${SHOPIFY_APP_URL}
          SCOPES=${SHOPIFY_APP_SCOPES}
          USPS_CONSUMER_KEY=${USPS_CONSUMER_KEY}
          USPS_CONSUMER_SECRET=${USPS_CONSUMER_SECRET}
          NODE_ENV=production
          EOL

          # Create deployment package excluding unnecessary files
          tar -czf deploy.tar.gz \
            --exclude="node_modules" \
            --exclude=".git" \
            --exclude="terraform" \
            .

          # Copy files to server
          scp -o StrictHostKeyChecking=no deploy.tar.gz $EC2_USERNAME@$EC2_HOST:/tmp/
          scp -o StrictHostKeyChecking=no .env $EC2_USERNAME@$EC2_HOST:/tmp/.env

          # Deploy on the server
          ssh -o StrictHostKeyChecking=no $EC2_USERNAME@$EC2_HOST << 'ENDSSH'
            # Create deployment directory
            DEPLOY_DIR="address-validation-$(date +%Y%m%d%H%M%S)"
            mkdir -p /home/$USER/$DEPLOY_DIR

            # Extract the deployment package
            tar -xzf /tmp/deploy.tar.gz -C /home/$USER/$DEPLOY_DIR

            # Copy the .env file
            cp /tmp/.env /home/$USER/$DEPLOY_DIR/.env
            rm /tmp/.env

            # Move to the deployment directory
            cd /home/$USER/$DEPLOY_DIR

            # Install dependencies and build
            npm ci
            npm run build

            # Run database migrations
            npm run setup

            # Create or update the symlink to the current deployment
            ln -sfn /home/$USER/$DEPLOY_DIR /home/$USER/current

            # Set up systemd service if it doesn't exist
            if [ ! -f /etc/systemd/system/address-validation.service ]; then
              sudo tee /etc/systemd/system/address-validation.service > /dev/null << EOL
              [Unit]
              Description=Address Validation Shopify App
              After=network.target

              [Service]
              Type=simple
              User=$USER
              WorkingDirectory=/home/$USER/current
              ExecStart=/usr/bin/npm run start
              Restart=always
              Environment=NODE_ENV=production

              [Install]
              WantedBy=multi-user.target
              EOL

              sudo systemctl daemon-reload
              sudo systemctl enable address-validation
            fi

            # Restart the service
            sudo systemctl restart address-validation

            # Clean up
            rm /tmp/deploy.tar.gz

            # Keep only the 3 most recent deployments
            cd /home/$USER
            ls -dt address-validation-* | tail -n +4 | xargs -r rm -rf
          ENDSSH

      - name: Deploy Shopify Extension
        run: |
          # Set up Shopify CLI authentication using GitHub secrets

          # Deploy extensions
          npm run deploy
